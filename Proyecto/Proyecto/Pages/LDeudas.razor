@page "/LDeudas"
@attribute [Authorize]

<div class="container">
   
    <div class="table-responsive">
        <table class="table table-hover text-center">
            <thead>
                <tr>
                    <th>Foto</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Cedula</th>
                    <th>Monto</th>
                </tr>
            </thead>
            @if (vofCarga)
            {
                <tbody>
                    @foreach(var x in facturas.Where(z => Convert.ToDouble(z.Debe) > 0).DistinctBy(z => z.ClienteID))
                {
                        var cli = clientes.First(z => z.ID == x.ClienteID);
                        double monto = facturas.Where(z => z.ClienteID == cli.ID).Sum(z => Convert.ToDouble(z.Debe));

                  <tr>
                      <td>
                          <a href="@cli.FotoP"><img src="@cli.FotoP{" width="100px" height="100px" /></a>
                      </td>
                      <td>
                          @cli.Nombre
                      </td>
                      <td>
                          @cli.Apellido
                      </td>
                      <td>
                          @cli.Cedula
                      </td>
                      <td>
                          @monto RD$
                      </td>
                    </tr>
                }
                </tbody>
            }

        </table>
    </div>
</div>



@code {

    bool vofCarga = false;


    List<Vehiculos> vehiculos;
    List<Clientes> clientes;
    List<Factura> facturas;


    protected override async Task OnInitializedAsync()
    {

        string urlV = "https://finalprog3-930fc-default-rtdb.firebaseio.com/Vehiculos.json";
        string urlF = "https://finalprog3-930fc-default-rtdb.firebaseio.com/Facturas.json";
        string urlC = "https://finalprog3-930fc-default-rtdb.firebaseio.com/Clientes.json";

        HttpClient http = new HttpClient();

        var resV = await http.GetAsync(urlV);
        if (resV.IsSuccessStatusCode)
        {
            var content = await resV.Content.ReadAsStringAsync();

            var dVehiculos = JsonConvert.DeserializeObject<Dictionary<string, Vehiculos>>(content);

            var dVehiculos2 = from x in dVehiculos
                              select new Vehiculos
                              {
                                  ID = x.Key,
                                  Carga = x.Value.Carga,
                                  Color = x.Value.Color,
                                  Estado = x.Value.Estado,
                                  Foto = x.Value.Foto,
                                  Lat = x.Value.Lat,
                                  Lng = x.Value.Lng,
                                  Marca = x.Value.Marca,
                                  Matricula = x.Value.Matricula,
                                  Modelo = x.Value.Modelo,
                                  Pasajeros = x.Value.Pasajeros,
                                  Price = x.Value.Price,
                                  Seguro = x.Value.Seguro,
                                  Tipo = x.Value.Tipo,
                                  Year = x.Value.Year



                              };

            vehiculos = dVehiculos2.ToList();
            //------------------------
            var resC = await http.GetAsync(urlC);
            if (resC.IsSuccessStatusCode)
            {
                var content2 = await resC.Content.ReadAsStringAsync();

                var dClientes = JsonConvert.DeserializeObject<Dictionary<string, Clientes>>(content2);

                var dClientes2 = from x in dClientes
                                 select new Clientes
                                 {

                                     ID = x.Key,
                                     Apellido = x.Value.Apellido,
                                     Cedula = x.Value.Cedula,
                                     Correo = x.Value.Correo,
                                     Estado = x.Value.Estado,
                                     FotoL = x.Value.FotoL,
                                     FotoP = x.Value.FotoP,
                                     Licencia = x.Value.Licencia,
                                     Nacionalidad = x.Value.Nacionalidad,
                                     Nombre = x.Value.Nombre,
                                     Sangre = x.Value.Sangre




                                 };

                clientes = dClientes2.ToList();

                var resF = await http.GetAsync(urlF);

                if (resF.IsSuccessStatusCode)
                {
                    var content3 = await resF.Content.ReadAsStringAsync();

                    var dFacturas = JsonConvert.DeserializeObject<Dictionary<string, Factura>>(content3);

                    var dFacturas2 = from x in dFacturas
                                     select new Factura
                                     {
                                         ID = x.Key,
                                         ClienteID = x.Value.ClienteID,
                                         Debe = x.Value.Debe,
                                         Desde = x.Value.Desde,
                                         Estado = x.Value.Estado,
                                         Monto = x.Value.Monto,
                                         Pagada = x.Value.Pagada,
                                         Pagado = x.Value.Pagado,
                                         VehiculoID = x.Value.VehiculoID,
                                         Hasta = x.Value.Hasta



                                     };

                    facturas = dFacturas2.Reverse().ToList();

                }


            }



        }


        vofCarga = true;
    }

}
